{"version":3,"sources":["actions/index.js","components/Input.js","components/weatherData.js","components/check-weather.js","components/App.js","reducers/index.js","reducers/weatherReducer.js","index.js"],"names":["fetchWeather","city","dispatch","a","city_name","axios","get","response","type","payload","data","Input","state","handleChange","e","setState","target","value","OnFormSubmit","preventDefault","props","onSubmit","this","className","onChange","React","Component","connect","bindActionCreators","WeatherData","weather","map","li","index","key","name","id","main","temp","toFixed","feels_like","humidity","weath","description","src","icon","alt","width","CheckWeather","renderWeather","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"qTAEaA,EAAe,SAACC,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,4DACpB,mCACZC,EAAYH,EAFoB,SAGbI,IAAMC,IAC3B,oDACEF,EADF,2CAJkC,OAG9BG,EAH8B,OASpCL,EAAS,CAAEM,KAAM,gBAAiBC,QAASF,EAASG,OAThB,2CAAV,uDCGtBC,G,kNACJC,MAAQ,CAAEX,KAAM,I,EAChBY,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEd,KAAMa,EAAEE,OAAOC,S,EAEjCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMpB,aAAa,EAAKY,MAAMX,MACnC,EAAKc,SAAS,CAAEd,KAAM,M,uDAGtB,OACE,0BAAMoB,SAAUC,KAAKJ,cACnB,yBAAKK,UAAU,iCACb,yBAAKA,UAAU,cACb,2BACEf,KAAK,OACLgB,SAAUF,KAAKT,aACfI,MAAOK,KAAKV,MAAMX,KAClBsB,UAAU,6BAGd,4BACEf,KAAK,SACLa,SAAUC,KAAKJ,aACfK,UAAU,8BAHZ,gB,GAtBUE,IAAMC,YAqCXC,kBAAQ,MAHvB,SAA4BzB,GAC1B,OAAO0B,YAAmB,CAAE5B,gBAAgBE,KAE/ByB,CAAkChB,GCtC3CkB,E,uKAEF,OACE,wBAAIN,UAAU,aACXD,KAAKF,MAAMU,QAAQC,KAAI,SAACC,EAAIC,GAAL,OACtB,yBAAKC,IAAKF,EAAGG,KAAMC,GAAG,eAAeb,UAAU,UAC7C,2BACE,2BAAIS,EAAGG,OAGT,uBAAGZ,UAAU,eACX,4BAAKS,EAAGK,KAAKC,KAAO,QAAQC,QAAQ,GAApC,UAEF,uBAAGhB,UAAU,cACX,4CACcS,EAAGK,KAAKG,WAAa,QAAQD,QAAQ,GADnD,UAIF,uBAAGhB,UAAU,YAAb,aAAmCS,EAAGK,KAAKI,UAC1CT,EAAGF,QAAQC,KAAI,SAACW,GAAD,OACd,6BACE,uBAAGnB,UAAU,wBAAwBmB,EAAMC,aAC3C,yBACEC,IAAG,0CAAqCF,EAAMG,KAA3C,QACHC,IAAI,WACJC,MAAM,qB,GAzBEtB,IAAMC,WAsCjBC,eAHS,SAACf,GACvB,MAAO,CAAEkB,QAASlB,EAAMkB,WAEc,CAAE9B,gBAA3B2B,CAA2CE,GCxB3CmB,E,8KAZX,OACE,yBAAKzB,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,S,+BAKJ,OAAO,yBAAKA,UAAU,kBAAkBD,KAAK2B,qB,GAVtBxB,IAAMC,WCOlBwB,MARf,WACE,OACE,yBAAK3B,UAAU,IACb,kBAAC,EAAD,MADF,MCFW4B,cAAgB,CAC7BrB,QCJa,WAAwB,IAAvBpB,EAAsB,uDAAf,GAAI0C,EAAW,uCACpC,MAAoB,kBAAhBA,EAAO5C,KACF,CAAC4C,EAAO3C,SAEVC,KCIH2C,EAAQC,YAAYC,EAAUC,YAAgBC,MACpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.75c4efb6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchWeather = (city) => async (dispatch) => {\r\n  const API_KEY = \"553e303834e8c57d0a907a27a6b451fe\";\r\n  var city_name = city;\r\n  const response = await axios.get(\r\n    \"http://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      city_name +\r\n      \"&appid=\" +\r\n      API_KEY\r\n  );\r\n  dispatch({ type: \"FETCH_WEATHER\", payload: response.data });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchWeather } from \"../actions\";\r\nimport \"../css/style.css\";\r\nclass Input extends React.Component {\r\n  state = { city: \"\" };\r\n  handleChange = (e) => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n  OnFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchWeather(this.state.city);\r\n    this.setState({ city: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.OnFormSubmit}>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              value={this.state.city}\r\n              className=\"form-control search-box\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            onSubmit={this.OnFormSubmit}\r\n            className=\"btn btn-success btn-submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ fetchWeather }, dispatch);\r\n}\r\nexport default connect(null, mapDispatchToProps)(Input);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchWeather } from \"../actions\";\r\n\r\nclass WeatherData extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"pl-3 pr-0\">\r\n        {this.props.weather.map((li, index) => (\r\n          <div key={li.name} id=\"weather-card\" className=\"day-bg\">\r\n            <p>\r\n              <b>{li.name}</b>\r\n            </p>\r\n\r\n            <p className=\"temperature\">\r\n              <b>{(li.main.temp - 273.15).toFixed(2)}°C</b>\r\n            </p>\r\n            <p className=\"feels-like\">\r\n              <span>\r\n                Real Feel {(li.main.feels_like - 273.15).toFixed(2)}°C\r\n              </span>\r\n            </p>\r\n            <p className=\"humidity\">Humidity: {li.main.humidity}</p>\r\n            {li.weather.map((weath) => (\r\n              <div>\r\n                <p className=\"text-capitalize mb-0\">{weath.description}</p>\r\n                <img\r\n                  src={`http://openweathermap.org/img/w/${weath.icon}.png`}\r\n                  alt=\"wthr img\"\r\n                  width=\"100\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { weather: state.weather };\r\n};\r\nexport default connect(mapStateToProps, { fetchWeather })(WeatherData);\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport WeatherData from \"./weatherData\";\r\n\r\nclass CheckWeather extends React.Component {\r\n  renderWeather() {\r\n    return (\r\n      <div className=\"pt-5 text-center\">\r\n        <Input />\r\n        <WeatherData />\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return <div className=\"main-container\">{this.renderWeather()}</div>;\r\n  }\r\n}\r\n\r\nexport default CheckWeather;\r\n","import React from \"react\";\nimport CheckWeather from \"./check-weather\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <CheckWeather />;\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nexport default combineReducers({\r\n  weather: weatherReducer,\r\n});\r\n","export default (data = [], action) => {\r\n  if (action.type === \"FETCH_WEATHER\") {\r\n    return [action.payload];\r\n  }\r\n  return data;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}